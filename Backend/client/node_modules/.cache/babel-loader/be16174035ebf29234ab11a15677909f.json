{"ast":null,"code":"var _jsxFileName = \"/Users/lovelbangura/Desktop/Project/lets_connect/Backend/client/src/components/post/CommentItem.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { deleteComment } from '../../actions/postAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentItem = _ref => {\n  let {\n    postId,\n    comment: {\n      _id,\n      text,\n      name,\n      avatar,\n      user,\n      commentedAt\n    },\n    auth,\n    deleteComment\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"comments\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"post bg-white p-1 my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/profile/${user}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"round-img\",\n            src: avatar,\n            alt: \"user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"my-1\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"post-date\",\n          children: [\"Posted on \", /*#__PURE__*/_jsxDEV(Moment, {\n            format: \"YYYY/MM/DD\",\n            children: commentedAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 14\n        }, this), !auth.loading && user === auth.user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: e => deleteComment(postId, _id),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-trash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CommentItem;\nCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  deleteComment\n})(CommentItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentItem\");","map":{"version":3,"sources":["/Users/lovelbangura/Desktop/Project/lets_connect/Backend/client/src/components/post/CommentItem.js"],"names":["React","PropTypes","connect","Link","Moment","deleteComment","CommentItem","postId","comment","_id","text","name","avatar","user","commentedAt","auth","loading","e","propTypes","number","isRequired","object","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,aAAR,QAA4B,0BAA5B;;;AAEA,MAAMC,WAAW,GAAG;AAAA,MAAC;AAACC,IAAAA,MAAD;AAASC,IAAAA,OAAO,EAAC;AAAEC,MAAAA,GAAF;AAAOC,MAAAA,IAAP;AAAaC,MAAAA,IAAb;AAAmBC,MAAAA,MAAnB;AAA2BC,MAAAA,IAA3B;AAAiCC,MAAAA;AAAjC,KAAjB;AAAgEC,IAAAA,IAAhE;AAAsEV,IAAAA;AAAtE,GAAD;AAAA,sBAEZ;AAAK,IAAA,KAAK,EAAC,UAAX;AAAA,2BACA;AAAK,MAAA,KAAK,EAAC,wBAAX;AAAA,8BACE;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,YAAWQ,IAAK,EAA3B;AAAA,kCACE;AACE,YAAA,KAAK,EAAC,WADR;AAEE,YAAA,GAAG,EAAED,MAFP;AAGE,YAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAA,sBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,gCACE;AAAG,UAAA,KAAK,EAAC,MAAT;AAAA,oBAAiBD;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEG;AAAG,UAAA,KAAK,EAAC,WAAT;AAAA,gDACiB,QAAC,MAAD;AAAQ,YAAA,MAAM,EAAC,YAAf;AAAA,sBAA6BI;AAA7B;AAAA;AAAA;AAAA;AAAA,kBADjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFH,EAKG,CAACC,IAAI,CAACC,OAAN,IAAiBH,IAAI,KAAKE,IAAI,CAACF,IAAL,CAAUJ,GAApC,iBACG;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,OAAO,EAAEQ,CAAC,IAAIZ,aAAa,CAACE,MAAD,EAASE,GAAT,CAA9D;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADJ,EACqC,GADrC;AAAA;AAAA;AAAA;AAAA;AAAA,gBANN;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UAFY;AAAA,CAApB;;KAAMH,W;AA+BNA,WAAW,CAACY,SAAZ,GAAwB;AACxBX,EAAAA,MAAM,EAAEN,SAAS,CAACkB,MAAV,CAAiBC,UADD;AAExBZ,EAAAA,OAAO,EAAEP,SAAS,CAACoB,MAAV,CAAiBD,UAFF;AAGxBL,EAAAA,IAAI,EAAEd,SAAS,CAACoB,MAAV,CAAiBD,UAHC;AAIxBf,EAAAA,aAAa,EAAEJ,SAAS,CAACqB,IAAV,CAAeF;AAJN,CAAxB;;AAOA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAC9BT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADkB,CAAL,CAA7B;;AAIA,eAAeb,OAAO,CAACqB,eAAD,EAAkB;AAAClB,EAAAA;AAAD,CAAlB,CAAP,CAA0CC,WAA1C,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport Moment from 'react-moment'\nimport {deleteComment} from '../../actions/postAction'\n\nconst CommentItem = ({postId, comment:{ _id, text, name, avatar, user, commentedAt}, auth, deleteComment}) => \n     (\n        <div class=\"comments\">\n        <div class=\"post bg-white p-1 my-1\">\n          <div>\n            <Link to={`/profile/${user}`}>\n              <img\n                class=\"round-img\"\n                src={avatar}\n                alt=\"user\"\n              />\n              <h4>{name}</h4>\n            </Link>\n          </div>\n          <div>\n            <p class=\"my-1\">{text}</p>\n             <p class=\"post-date\">\n                    Posted on <Moment format=\"YYYY/MM/DD\">{commentedAt}</Moment>\n            </p>\n            {!auth.loading && user === auth.user._id && (\n                <button className=\"btn btn-danger\" onClick={e => deleteComment(postId, _id)}>\n                    <i className=\"fas fa-trash\"></i>{' '}\n                </button>\n            )}\n          </div>\n        </div>\n        </div>\n    );\n\n\n\nCommentItem.propTypes = {\npostId: PropTypes.number.isRequired,\ncomment: PropTypes.object.isRequired,\nauth: PropTypes.object.isRequired,\ndeleteComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, {deleteComment})(CommentItem)\n"]},"metadata":{},"sourceType":"module"}