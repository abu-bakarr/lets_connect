{"ast":null,"code":"var _jsxFileName = \"/Users/lovelbangura/Desktop/Project/lets_connect/Backend/client/src/components/auth/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom'; //Redux\n\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alertAction';\nimport { register } from '../../actions/authAction';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = _ref => {\n  _s();\n\n  let {\n    setAlert,\n    register,\n    isAuthenticated\n  } = _ref;\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formData; //setting all the form input in this method\n\n  const onChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      await setAlert(\"Password not Match\", 'danger');\n    } else {\n      await register({\n        name,\n        email,\n        password\n      });\n    }\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this), \" Create Your Account\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          name: \"name\",\n          value: name,\n          onChange: e => onChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          name: \"email\",\n          value: email,\n          onChange: e => onChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text\",\n          children: \"This site uses Gravatar so if you want a profile image, use a Gravatar email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          minLength: \"8\",\n          value: password,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          name: \"password2\",\n          minLength: \"8\",\n          value: password2,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        value: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"my-1\",\n      children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 1\n  }, this);\n};\n\n_s(Register, \"LMIUCu7jbhJhPN5HXRzI4D3legs=\");\n\n_c = Register;\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/lovelbangura/Desktop/Project/lets_connect/Backend/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","Link","Redirect","connect","setAlert","register","PropTypes","Register","isAuthenticated","formData","setFormData","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n//Redux\nimport { connect} from 'react-redux'\nimport {setAlert} from '../../actions/alertAction'\nimport {register} from '../../actions/authAction'\nimport PropTypes from 'prop-types';\n\n\n\nconst Register = ({setAlert, register, isAuthenticated }) => {\n\n    const [formData, setFormData] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        password2: \"\"\n    })\n    const { name, email, password, password2} = formData\n\n    //setting all the form input in this method\n    const onChange = e => {\n       setFormData({...formData, [e.target.name]: e.target.value}) \n    }\n   \nconst onSubmit =  async e => {\n    e.preventDefault()\n    if(password !== password2 ){\n      await setAlert(\"Password not Match\",'danger')\n    }\n    else{\n      await register({name, email,password})      \n    }\n}\n\nif (isAuthenticated){\n  return <Redirect to=\"/dashboard\" />\n}\n\n  return (\n<Fragment>\n    <h1 className=\"large text-primary\">Sign Up</h1>\n    <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n    <form className=\"form\" onSubmit={ e => onSubmit(e)} >\n      <div className=\"form-group\">\n        <input\n            type=\"text\"\n            placeholder=\"Name\" \n            name=\"name\" \n            value={name} \n            onChange={e => onChange(e)}  required />\n      </div>\n      <div className=\"form-group\">\n        <input\n             type=\"email\" \n             placeholder=\"Email Address\" \n             name=\"email\"  \n             value={email} \n             onChange={e => onChange(e)} required/>\n        <small className=\"form-text\"\n          >This site uses Gravatar so if you want a profile image, use a\n          Gravatar email</small\n        >\n      </div>\n      <div className=\"form-group\">\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          minLength=\"8\"\n          value={password} \n          onChange={e => onChange(e)}\n        />\n      </div>\n      <div className=\"form-group\">\n        <input\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          name=\"password2\"\n          minLength=\"8\"\n          value={password2} \n          onChange={e => onChange(e)}\n        />\n      </div>\n      <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n    </form>\n    <p className=\"my-1\">\n      Already have an account? \n      <Link to=\"/login\">Sign In</Link>\n    </p>\n </Fragment>\n  );\n}\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n}\n\n\nconst mapStateToProps = state =>({\n  isAuthenticated: state.auth.isAuthenticated,\n})\n\nexport default connect (mapStateToProps, {setAlert, register})(Register)\n"]},"metadata":{},"sourceType":"module"}