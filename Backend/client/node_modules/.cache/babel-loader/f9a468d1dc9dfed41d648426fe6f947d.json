{"ast":null,"code":"var _jsxFileName = \"/Users/lovelbangura/Desktop/Project/lets_connect/Backend/client/src/components/posts/PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { updateLike, removeLike, deletePost } from '../../actions/postAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostItem = _ref => {\n  let {\n    auth,\n    post: {\n      _id,\n      text,\n      name,\n      likes,\n      comments,\n      user,\n      avatar,\n      commentedAt\n    },\n    updateLike,\n    removeLike,\n    deletePost,\n    showActions\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post bg-white p-1 my-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"round-img\",\n          src: avatar,\n          alt: \"user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"my-1\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-date\",\n        children: [\"Posted on \", /*#__PURE__*/_jsxDEV(Moment, {\n          format: \"YYYY/MM/DD\",\n          children: commentedAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this), showActions && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: e => updateLike(_id),\n          className: \"btn btn-light\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-thumbs-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: likes.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"comment-count\",\n              children: likes.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: e => removeLike(_id),\n          className: \"btn btn-light\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-thumbs-down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/${_id}`,\n          className: \"btn btn-primary\",\n          children: [\"Discussion  \", comments.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"comment-count\",\n            children: comments.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), !auth.loading && user === auth.user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: e => deletePost(_id),\n          className: \"btn btn-danger\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-trash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 6\n  }, this);\n};\n\n_c = PostItem;\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  auth: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  updateLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  updateLike,\n  removeLike,\n  deletePost\n})(PostItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["/Users/lovelbangura/Desktop/Project/lets_connect/Backend/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","updateLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","likes","comments","user","avatar","commentedAt","showActions","e","length","loading","defaultProps","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA6B,OAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,EAAoBC,UAApB,EAAgCC,UAAhC,QAAiD,0BAAjD;;;AAGA,MAAMC,QAAQ,GAAG;AAAA,MAAC;AACdC,IAAAA,IADc;AAEdC,IAAAA,IAAI,EAAE;AAACC,MAAAA,GAAD;AAAMC,MAAAA,IAAN;AAAYC,MAAAA,IAAZ;AAAkBC,MAAAA,KAAlB;AAAyBC,MAAAA,QAAzB;AAAmCC,MAAAA,IAAnC;AAAyCC,MAAAA,MAAzC;AAAiDC,MAAAA;AAAjD,KAFQ;AAGdb,IAAAA,UAHc;AAGFC,IAAAA,UAHE;AAGUC,IAAAA,UAHV;AAGsBY,IAAAA;AAHtB,GAAD;AAAA,sBAMZ;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACK;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,WADZ;AAEE,UAAA,GAAG,EAAEF,MAFP;AAGE,UAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAA,oBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADL,eAWK;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,kBAAqBD;AAArB;AAAA;AAAA;AAAA;AAAA,cADF,eAEG;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,8CACiB,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAC,YAAf;AAAA,oBAA8BM;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH,EAKIC,WAAW,iBAAK,QAAC,QAAD;AAAA,gCACd;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEC,CAAC,IAAIf,UAAU,CAACM,GAAD,CAA9C;AAAqD,UAAA,SAAS,EAAC,eAA/D;AAAA,kCACF;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADE,eAEH;AAAA,sBAAOG,KAAK,CAACO,MAAN,GAAe,CAAf,iBACH;AAAM,cAAA,SAAS,EAAC,eAAhB;AAAA,wBAAiCP,KAAK,CAACO;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFG;AAAA;AAAA;AAAA;AAAA;AAAA,gBADc,eAOlB;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAuB,UAAA,OAAO,EAAED,CAAC,IAAId,UAAU,CAACK,GAAD,CAA/C;AAAsD,UAAA,SAAS,EAAC,eAAhE;AAAA,iCACC;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAPkB,eAUlB,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASA,GAAI,EAAxB;AAA2B,UAAA,SAAS,EAAC,iBAArC;AAAA,qCACcI,QAAQ,CAACM,MAAT,GAAkB,CAAlB,iBACT;AAAM,YAAA,SAAS,EAAC,eAAhB;AAAA,sBAAiCN,QAAQ,CAACM;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAFL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVkB,EAgBjB,CAACZ,IAAI,CAACa,OAAN,IAAiBN,IAAI,KAAKP,IAAI,CAACO,IAAL,CAAUL,GAApC,iBACG;AACA,UAAA,IAAI,EAAC,QADL;AAEA,UAAA,OAAO,EAAES,CAAC,IAAIb,UAAU,CAACI,GAAD,CAFxB;AAGA,UAAA,SAAS,EAAC,gBAHV;AAAA,iCAKA;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA,gBAjBc;AAAA;AAAA;AAAA;AAAA;AAAA,cALpB;AAAA;AAAA;AAAA;AAAA;AAAA,YAXL;AAAA;AAAA;AAAA;AAAA;AAAA,UANY;AAAA,CAAjB;;KAAMH,Q;AAoDNA,QAAQ,CAACe,YAAT,GAAwB;AACpBJ,EAAAA,WAAW,EAAE;AADO,CAAxB;AAKAX,QAAQ,CAACgB,SAAT,GAAqB;AACrBf,EAAAA,IAAI,EAAER,SAAS,CAACwB,MAAV,CAAiBC,UADF;AAErBhB,EAAAA,IAAI,EAAET,SAAS,CAACwB,MAAV,CAAiBC,UAFF;AAGrBnB,EAAAA,UAAU,EAAEN,SAAS,CAAC0B,IAAV,CAAeD,UAHN;AAIrBrB,EAAAA,UAAU,EAAEJ,SAAS,CAAC0B,IAAV,CAAeD,UAJN;AAKrBpB,EAAAA,UAAU,EAAEL,SAAS,CAAC0B,IAAV,CAAeD;AALN,CAArB;;AAQA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BpB,EAAAA,IAAI,EAAEoB,KAAK,CAACpB;AADkB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACwB,eAAD,EAAkB;AAAEvB,EAAAA,UAAF;AAAcC,EAAAA,UAAd;AAA0BC,EAAAA;AAA1B,CAAlB,CAAP,CAAgEC,QAAhE,CAAf","sourcesContent":["import React, {Fragment}from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom'\nimport Moment from 'react-moment'\nimport {connect} from 'react-redux'\nimport {updateLike, removeLike, deletePost} from '../../actions/postAction'\n\n\nconst PostItem = ({\n    auth, \n    post: {_id, text, name, likes, comments, user, avatar, commentedAt},\n    updateLike, removeLike, deletePost, showActions\n}) => \n     (\n     <div className=\"post bg-white p-1 my-1\">\n          <div>\n            <Link to=\"#\">\n              <img\n                className=\"round-img\"\n                src={avatar}\n                alt=\"user\"\n              />\n              <h4>{name}</h4>\n            </Link>\n          </div>\n          <div>\n            <p className=\"my-1\">{text}</p>\n             <p className=\"post-date\">\n                    Posted on <Moment format=\"YYYY/MM/DD\" >{commentedAt}</Moment>\n            </p>\n            { showActions && (<Fragment>\n                <button type=\"button\" onClick={e => updateLike(_id)} className=\"btn btn-light\">\n              <i className=\"fas fa-thumbs-up\"></i>\n             <span>{likes.length > 0 && (\n                 <span className='comment-count'>{likes.length}</span>\n             )}</span>\n            </button>\n            <button type=\"button\"  onClick={e => removeLike(_id)} className=\"btn btn-light\">\n             <i className=\"fas fa-thumbs-down\"></i>\n            </button>\n            <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n             Discussion  {comments.length > 0 && (\n                 <span className='comment-count'>{comments.length}</span>\n             )}\n             \n            </Link>\n            {!auth.loading && user === auth.user._id && (\n                <button      \n                type=\"button\"\n                onClick={e => deletePost(_id)}\n                className=\"btn btn-danger\"\n              >\n                <i className=\"fas fa-trash\"></i>\n              </button>\n            )}\n            </Fragment>)}\n          </div>\n        </div>\n    );\n\nPostItem.defaultProps = {\n    showActions: true\n}\n\n\nPostItem.propTypes = {\nauth: PropTypes.object.isRequired,\npost: PropTypes.object.isRequired,\ndeletePost: PropTypes.func.isRequired,\nupdateLike: PropTypes.func.isRequired,\nremoveLike: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { updateLike, removeLike, deletePost})(PostItem);\n"]},"metadata":{},"sourceType":"module"}