{"ast":null,"code":"var _jsxFileName = \"/Users/lovelbangura/Desktop/Project/lets_connect/Backend/client/src/components/dashboard/Experience.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { deleteUserExperience } from '../../actions/profileAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Experience = _ref => {\n  let {\n    experience,\n    deleteUserExperience\n  } = _ref;\n  var experiences;\n\n  if (experience) {\n    experiences = experience.map(exp => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: exp.company\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"hide-sm\",\n        children: exp.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(Moment, {\n          format: \"YYYY/MM/DD\",\n          children: exp.from\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 18\n        }, this), \"  ------ \", exp.to === null ? \" Now \" : /*#__PURE__*/_jsxDEV(Moment, {\n          format: \"YYYY/MM/DD\",\n          children: exp.to\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: () => deleteUserExperience(exp._id),\n          children: \" Delete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)]\n    }, exp._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this));\n  } else {\n    return experiences = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"my-2\",\n      children: \" Experience Credentials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Company(s)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"hide-sm\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"hide-sm\",\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: experiences\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Experience;\nExperience.propTypes = {\n  experience: PropTypes.array.isRequired,\n  deleteUserExperience: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  deleteUserExperience\n})(Experience);\n\nvar _c;\n\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"sources":["/Users/lovelbangura/Desktop/Project/lets_connect/Backend/client/src/components/dashboard/Experience.js"],"names":["React","Fragment","PropTypes","Moment","connect","deleteUserExperience","Experience","experience","experiences","map","exp","company","title","from","to","_id","propTypes","array","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,oBAAT,QAAqC,6BAArC;;;AAEA,MAAOC,UAAU,GAAG,QAA0C;AAAA,MAAzC;AAAEC,IAAAA,UAAF;AAAcF,IAAAA;AAAd,GAAyC;AAC1D,MAAIG,WAAJ;;AACA,MAAID,UAAJ,EAAe;AACfC,IAAAA,WAAW,GAAGD,UAAU,CAACE,GAAX,CAAeC,GAAG,iBAC5B;AAAA,8BACI;AAAA,kBAAKA,GAAG,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA,kBAAyBD,GAAG,CAACE;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,gCACK,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAC,YAAf;AAAA,oBAA6BF,GAAG,CAACG;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADL,eAESH,GAAG,CAACI,EAAJ,KAAW,IAAX,GAAmB,OAAnB,gBAA+B,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAC,YAAf;AAAA,oBAA6BJ,GAAG,CAACI;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAFxC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAQI;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,OAAO,EAAE,MAAMT,oBAAoB,CAACK,GAAG,CAACK,GAAL,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA,OAASL,GAAG,CAACK,GAAb;AAAA;AAAA;AAAA;AAAA,YADU,CAAd;AAcC,GAfD,MAeO;AACH,WAAOP,WAAW,GAAG,IAArB;AACH;;AAED,sBACI,QAAC,QAAD;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,8BACQ;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAI,YAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADR,eASQ;AAAA,kBACSA;AADT;AAAA;AAAA;AAAA;AAAA,cATR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAvCD;;KAAOF,U;AAyCPA,UAAU,CAACU,SAAX,GAAuB;AACvBT,EAAAA,UAAU,EAAEL,SAAS,CAACe,KAAV,CAAgBC,UADL;AAEvBb,EAAAA,oBAAoB,EAAEH,SAAS,CAACiB,IAAV,CAAeD;AAFd,CAAvB;AAKA,eAAed,OAAO,CAAC,IAAD,EAAO;AAACC,EAAAA;AAAD,CAAP,CAAP,CAAsCC,UAAtC,CAAf","sourcesContent":["import React, {Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport Moment from 'react-moment'\nimport {connect} from 'react-redux'\nimport { deleteUserExperience } from '../../actions/profileAction'\n\nconst  Experience = ({ experience, deleteUserExperience})  => {\n    var experiences\n    if (experience){\n    experiences = experience.map(exp => (\n        <tr key={exp._id}>\n            <td>{exp.company}</td>\n            <td className=\"hide-sm\">{exp.title}</td>\n            <td>\n                 <Moment format=\"YYYY/MM/DD\">{exp.from}</Moment >  ------ {\n                     exp.to === null ? (\" Now \") : (<Moment format=\"YYYY/MM/DD\">{exp.to}</Moment >)\n                 }\n            </td>\n            <td>\n                <button className=\"btn btn-danger\" onClick={() => deleteUserExperience(exp._id)}> Delete </button>\n            </td>\n        </tr>\n    ))\n    } else {\n        return experiences = null\n    }\n\n    return (\n        <Fragment>\n            <h2 className=\"my-2\"> Experience Credentials</h2>\n            <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Company(s)</th>\n                            <th className=\"hide-sm\">Title</th>\n                            <th className=\"hide-sm\">Year</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                            {experiences}\n                    </tbody>\n            </table>\n         </Fragment>\n    )\n}\n\nExperience.propTypes = {\nexperience: PropTypes.array.isRequired,\ndeleteUserExperience: PropTypes.func.isRequired,\n}\n\nexport default connect(null, {deleteUserExperience})(Experience)\n\n"]},"metadata":{},"sourceType":"module"}