{"ast":null,"code":"var _jsxFileName = \"/Users/lovelbangura/Desktop/Project/lets_connect/Backend/client/src/components/profile/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layouts/Spinner';\nimport { getProfileById } from '../../actions/profileAction';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = _ref => {\n  _s();\n\n  let {\n    getProfileById,\n    auth,\n    profile: {\n      profile,\n      loading\n    },\n    match\n  } = _ref;\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  console.log(\"profile===> id\", match.params.id);\n  console.log(\"profile===>\", profile);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: profile === null || loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/edit-profile\",\n        className: \"btn btn-dark\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-pencil-square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 22\n        }, this), ' ', \"Edit Profile\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-grid my-1\",\n        children: [/*#__PURE__*/_jsxDEV(ProfileTop, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProfileAbout, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-exp bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-primary\",\n            children: \"Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), profile.experience.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: profile.experience.map(exp => /*#__PURE__*/_jsxDEV(ProfileExperience, {\n              experience: exp\n            }, exp._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"No Experience Record found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-edu bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-primary\",\n            children: \"Education\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), profile.education.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: profile.education.map(edu => /*#__PURE__*/_jsxDEV(ProfileEducation, {\n              education: edu\n            }, edu._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"No Educational Record found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), profile.githubusername && /*#__PURE__*/_jsxDEV(ProfileGithub, {\n          username: profile.githubusername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        className: \"btn bn-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), ' ', \"Go Back\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/lovelbangura/Desktop/Project/lets_connect/Backend/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Link","Spinner","getProfileById","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileGithub","Profile","auth","profile","loading","match","params","id","console","log","isAuthenticated","user","_id","experience","length","map","exp","education","edu","githubusername","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport Spinner from '../layouts/Spinner'\nimport {getProfileById} from '../../actions/profileAction'\nimport ProfileTop from './ProfileTop'\nimport ProfileAbout from './ProfileAbout'\nimport ProfileExperience from './ProfileExperience'\nimport ProfileEducation from './ProfileEducation'\nimport ProfileGithub from './ProfileGithub'\n\nconst  Profile =({ \n    getProfileById, \n    auth, \n    profile: { profile, loading}, \n    match }) => {\n\n    useEffect(() =>{\n        getProfileById(match.params.id)\n    }, [getProfileById, match.params.id])\n\n    console.log(\"profile===> id\", match.params.id)\n    console.log(\"profile===>\", profile)\n\n    return (\n        <Fragment>\n            {profile === null || loading ?\n             <Spinner /> : \n             <Fragment>\n                 {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id &&\n                 (<Link to=\"/edit-profile\" className=\"btn btn-dark\">\n                     <i className=\"fas fa-pencil-square\"></i>{' '}\n                      Edit Profile</Link>)\n                }\n                 <div className=\"profile-grid my-1\">\n                    <ProfileTop  profile={profile}  />\n                    <ProfileAbout  profile={profile} />\n                    <div className=\"profile-exp bg-white p-2\">\n                        <h2 className=\"text-primary\">Experience</h2>\n                        { profile.experience.length > 0 ? (\n                            <Fragment>\n                                {profile.experience.map(exp => (\n                                    <ProfileExperience key={exp._id} experience={exp} />\n                                ))}\n                            </Fragment>\n                        ) : \n                        (<h4>No Experience Record found</h4>)\n                        }\n                    </div>\n                    <div className=\"profile-edu bg-white p-2\">\n                        <h2 className=\"text-primary\">Education</h2>\n                        {profile.education.length > 0 ? (\n                            <Fragment>\n                                {profile.education.map(edu => (\n                                    <ProfileEducation key={edu._id} education={edu} />\n                                ))}\n                            </Fragment>\n                        ) : \n                        (<h4>No Educational Record found</h4>)}\n                    </div>\n              {profile.githubusername && <ProfileGithub username={profile.githubusername}/> } \n            </div>\n            <Link to=\"/profiles\" className=\"btn bn-light\">\n            <i className=\"fas fa-share\"></i>{' '}\n                     Go Back\n                 </Link>\n            </Fragment>\n            }\n         </Fragment>\n    )\n}\n\nProfile.propTypes = {\ngetProfileById: PropTypes.func.isRequired,\nprofile: PropTypes.object.isRequired,\nauth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    auth: state.auth\n})\nexport default connect(mapStateToProps, {getProfileById})(Profile)\n\n"]},"metadata":{},"sourceType":"module"}