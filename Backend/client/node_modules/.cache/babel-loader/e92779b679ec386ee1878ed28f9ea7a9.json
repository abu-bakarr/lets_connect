{"ast":null,"code":"var _jsxFileName = \"/Users/lovelbangura/Desktop/Project/lets_connect/Backend/client/src/components/post/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layouts/Spinner';\nimport { getPost } from '../../actions/postAction';\nimport PostItem from '../posts/PostItem';\nimport { Link } from 'react-router-dom';\nimport CommentForm from '../post/CommentForm';\nimport CommentItem from '../post/CommentItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = _ref => {\n  _s();\n\n  let {\n    getPost,\n    match,\n    post: {\n      loading,\n      post\n    }\n  } = _ref;\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost(match.params.id), post]);\n  return loading || post === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 17\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PostItem, {\n      post: post,\n      showActions: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      postId: post._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: post.comments.map(comment => /*#__PURE__*/_jsxDEV(CommentItem, {\n        postId: post._id,\n        comment: comment\n      }, comment._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/posts\",\n      className: \"btn\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 17\n  }, this);\n};\n\n_s(Post, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Post;\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/lovelbangura/Desktop/Project/lets_connect/Backend/client/src/components/post/Post.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getPost","PostItem","Link","CommentForm","CommentItem","Post","match","post","loading","params","id","_id","comments","map","comment","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAAQC,OAAR,QAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;;AAEA,MAAMC,IAAI,GAAG,QAA8C;AAAA;;AAAA,MAA7C;AAAEL,IAAAA,OAAF;AAAWM,IAAAA,KAAX;AAAkBC,IAAAA,IAAI,EAAE;AAACC,MAAAA,OAAD;AAAUD,MAAAA;AAAV;AAAxB,GAA6C;AAEvDX,EAAAA,SAAS,CAAC,MAAK;AACXI,IAAAA,OAAO,CAACM,KAAK,CAACG,MAAN,CAAaC,EAAd,CAAP;AACH,GAFQ,EAEN,CAACV,OAAO,CAACM,KAAK,CAACG,MAAN,CAAaC,EAAd,CAAR,EAA2BH,IAA3B,CAFM,CAAT;AAIA,SAAOC,OAAO,IAAID,IAAI,KAAK,IAApB,gBACK,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADL,gBAEK,QAAC,QAAD;AAAA,4BACQ,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAsB,MAAA,WAAW,EAAE;AAAnC;AAAA;AAAA;AAAA;AAAA,YADR,eAEQ,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEA,IAAI,CAACI;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFR,eAGQ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACKJ,IAAI,CAACK,QAAL,CAAcC,GAAd,CAAkBC,OAAO,iBACtB,QAAC,WAAD;AAA+B,QAAA,MAAM,EAAEP,IAAI,CAACI,GAA5C;AAAiD,QAAA,OAAO,EAAEG;AAA1D,SAAkBA,OAAO,CAACH,GAA1B;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAHR,eAQQ,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAkB,MAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARR;AAAA;AAAA;AAAA;AAAA;AAAA,UAFZ;AAeH,CArBD;;GAAMN,I;;KAAAA,I;AAwBNA,IAAI,CAACU,SAAL,GAAiB;AACjBf,EAAAA,OAAO,EAAEH,SAAS,CAACmB,IAAV,CAAeC,UADP;AAEjBV,EAAAA,IAAI,EAAEV,SAAS,CAACqB,MAAV,CAAiBD;AAFN,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9Bb,EAAAA,IAAI,EAAEa,KAAK,CAACb;AADkB,CAAL,CAA7B;;AAGA,eAAeT,OAAO,CAACqB,eAAD,EAAkB;AAACnB,EAAAA;AAAD,CAAlB,CAAP,CAAoCK,IAApC,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux'\nimport Spinner from '../layouts/Spinner'\nimport {getPost} from '../../actions/postAction'\nimport PostItem from '../posts/PostItem'\nimport { Link } from 'react-router-dom';\nimport CommentForm from '../post/CommentForm';\nimport CommentItem from '../post/CommentItem';\n\nconst Post = ({ getPost, match, post: {loading, post}}) => {\n\n    useEffect(() =>{\n        getPost(match.params.id)\n    }, [getPost(match.params.id), post ])\n\n    return loading || post === null ? \n                <Spinner /> :\n                <Fragment>\n                        <PostItem post={post} showActions={false} />\n                        <CommentForm postId={post._id} />\n                        <div className=\"comments\">\n                            {post.comments.map(comment => (\n                                <CommentItem key={comment._id} postId={post._id} comment={comment}/>\n                            ))}\n                        </div>\n                        <Link to=\"/posts\" className=\"btn\">\n                            Go Back\n                        </Link>\n                </Fragment>\n\n};\n\n\nPost.propTypes = {\ngetPost: PropTypes.func.isRequired,\npost: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    post: state.post\n})\nexport default connect(mapStateToProps, {getPost})(Post)\n"]},"metadata":{},"sourceType":"module"}